sudo: required

dist: trusty

language: go

go:
  - "1.10.2"

matrix:
  include:
    - env: HYBRID=YES
    - env: HYBRID=NO

install:
  - sudo apt-get install liberasurecode-dev libjerasure-dev
  - make get all
  - bin/hummingbird init haio
  - ./hummingbird-init-haio.sh skiptests
  - sudo apt remove python-nose # since we'll be installing the pip edition
  - go get github.com/haya14busa/goverage
  - mkdir -p /tmp/output
  - |
    set -e
    if [ "$HYBRID" = "YES" ] ; then
      cd ~/swift
      git checkout stable/pike
    else
      mkdir -p /tmp/output/bin
      cp /usr/local/bin/hummingbird /tmp/output/bin
    fi
  - virtualenv ~/swift-venv
  - ~/swift-venv/bin/pip install -U pip setuptools python-subunit nose-htmloutput nose-exclude
  - sed -i 's/^eventlet.*$/eventlet==0.20.0/' ~/swift/requirements.txt # Temp since newer Eventlets blew up
  - ~/swift-venv/bin/pip install -r ~/swift/requirements.txt
  - ~/swift-venv/bin/pip install -r ~/swift/test-requirements.txt
  - sudo mkdir -p /etc/swift /var/run/swift
  - sudo chown -R "${USER}"  /etc/swift /var/run/swift
  - cp ~/swift/doc/saio/bin/* ~/swift-venv/bin
  - cp -p -r ~/swift/doc/saio/swift/* /etc/swift
  - cp -p /etc/hummingbird/*.ring.gz /etc/swift
  - cp -p ~/swift/test/sample.conf /etc/swift/test.conf
  - cd ~/swift; ~/swift-venv/bin/python setup.py install
  - find /etc/swift -name "*.conf" | xargs sed -i "s/<your-user-name>/${USER}/"
  - sed -i "s/eventlet_debug = true/object_post_as_copy = true/" /etc/swift/proxy-server.conf
  - printf "[swift-hash]\nswift_hash_path_prefix = changeme\nswift_hash_path_suffix = changeme\n" > /etc/swift/swift.conf

script:
  - |
    set -e
    if [ "$HYBRID" = "YES" ] ; then
      hummingbird start object
      hummingbird start container
      hummingbird start account
      PATH=$PATH:~/swift-venv/bin swift-init start proxy
      PATH=$PATH:~/swift-venv/bin nosetests -e test_unicode_metadata --with-html --html-file=/tmp/output/functional_swiftproxy.html ~/swift/test/functional
    else
      cd $GOPATH/src/github.com/RocFang/hummingbird
      test -z "$(find . -name '*.go' -not -path './vendor/*' | xargs gofmt -l -s)" || (echo "You need to run 'make fmt'"; exit 1)
      go vet github.com/RocFang/hummingbird/...
      goverage -coverprofile=/tmp/coverage.out github.com/RocFang/hummingbird/...
      go tool cover -html=/tmp/coverage.out -o "/tmp/output/coverage.html"
      hummingbird start main
      export BOTO_CONFIG=/dev/null
      PATH=$PATH:~/swift-venv/bin nosetests --with-html --html-file=/tmp/output/functional_hbproxy.html ~/swift/test/functional --exclude-test-file=$TRAVIS_BUILD_DIR/.swift_func_excludes
    fi
  - echo "<html><body><h1>Files</h1><ul>$(for file in `find /tmp/output -type f -printf "%P\n" | sort`; do echo "<li><a href='$file'>$file</a></li>"; done)</ul></body></html>" > /tmp/output/index.html
  - |
    set -e
    if [ "$HYBRID" = "NO" ] ; then
      mkdir -p $TRAVIS_BUILD_DIR/output
      cp -r /tmp/output/* $TRAVIS_BUILD_DIR/output
    fi

deploy:
  - provider: releases
    api_key: $GITHUB_TOKEN
    file: /usr/local/bin/hummingbird
    skip_cleanup: true
    overwrite: true
    on:
      tags: true
      condition: $HYBRID = NO
  - provider: pages
    github-token: $GITHUB_TOKEN
    skip-cleanup: true
    local-dir: output
    verbose: true
    on:
      branch: master
      condition: $HYBRID = NO
